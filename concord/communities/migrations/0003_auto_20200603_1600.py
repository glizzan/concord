# Generated by Django 2.2.4 on 2020-06-03 16:00

from django.db import migrations
from django.conf import settings
from django.apps import apps


def postgres_migration_prep(apps, schema_editor):

    # Find all community models that have a changing condition field, aka all
    # communities that inherit from the abstract BaseCommunity model

    from concord.communities.models import Community, DefaultCommunity

    model_list = [Community, DefaultCommunity]
    # if hasattr(settings, "ALTERNATIVE_COMMUNITY_MODELS"):
    #     for model in settings.ALTERNATIVE_COMMUNITY_MODELS:
    #         model_class = apps.get_model(model["app_name"], model["model_name"])
    #         model_list.append(model_class)

    # For all community objects in the DB, give them a default template field
    # need to get all that have is_community attr

    from concord.actions.customfields import Template

    for model in model_list:

        update_parameters = {
            "owner_condition": Template(system=True),
            "governor_condition": Template(system=True)
        }
        model.objects.update(**update_parameters)



class Migration(migrations.Migration):

    dependencies = [
        ('communities', '0002_auto_20200601_1407'),
    ]

    operations = [
        migrations.RunPython(postgres_migration_prep, migrations.RunPython.noop)
    ]

